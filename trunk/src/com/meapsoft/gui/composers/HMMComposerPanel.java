/*
 * HMMComposerPanel.java
 *
 * Created on November 18, 2007, 11:01 PM
 */

package com.meapsoft.gui.composers;

import com.meapsoft.composers.Composer;
import com.meapsoft.composers.HMMComposer;

/**
 *
 * @author  Mike
 */
public class HMMComposerPanel extends ComposerSettingsPanel
{
    
    /** Creates new form HMMComposerPanel */
    public HMMComposerPanel()
    {
        initComponents();
    }
    
    public int initComposer()
    {
		mComposer = new HMMComposer(mParentTab.featFile, mParentTab.edlFile);

		//cast this down and set settings
		HMMComposer hmm = (HMMComposer)mComposer;
		hmm.setCodebookSize(mStatesSlider.getValue());
		hmm.setBeatsPerCodeword(mBeatsSlider.getValue());
		hmm.setSequenceLength(mLengthSlider.getValue());
    	
    	return 0;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        mStatesSlider = new javax.swing.JSlider();
        mBeatsSlider = new javax.swing.JSlider();
        mLengthSlider = new javax.swing.JSlider();

        jLabel1.setText("Number of states:");

        jLabel2.setText("Beats per state:");

        jLabel3.setText("Sequence length:");

        mStatesSlider.setMajorTickSpacing(25);
        mStatesSlider.setPaintLabels(true);
        mStatesSlider.setValue(25);

        mBeatsSlider.setMajorTickSpacing(2);
        mBeatsSlider.setMaximum(16);
        mBeatsSlider.setPaintLabels(true);
        mBeatsSlider.setValue(4);

        mLengthSlider.setMajorTickSpacing(50);
        mLengthSlider.setMaximum(200);
        mLengthSlider.setPaintLabels(true);
        mLengthSlider.setValue(100);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(10, 10, 10)
                                .add(mStatesSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jLabel1)
                            .add(jLabel2)))
                    .add(layout.createSequentialGroup()
                        .add(20, 20, 20)
                        .add(mBeatsSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(34, 34, 34)
                        .add(mLengthSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(23, 23, 23)
                        .add(jLabel3)))
                .add(86, 86, 86))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jLabel3))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(mStatesSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(mLengthSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(mBeatsSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(157, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSlider mBeatsSlider;
    private javax.swing.JSlider mLengthSlider;
    private javax.swing.JSlider mStatesSlider;
    // End of variables declaration//GEN-END:variables
    
}
