/*
 * SortComposerPanel.java
 *
 * Created on November 15, 2007, 3:27 PM
 */

package com.meapsoft.gui.composers;

import com.meapsoft.composers.Composer;
import com.meapsoft.composers.SortComposer;

/**
 * A GUI for the SortComposer
 * @author  Mike
 */
public class SortComposerPanel extends ComposerSettingsPanel
{
    
    /** Creates new form SortComposerPanel */
    public SortComposerPanel()
    {
        initComponents();
    }
    
	public int initComposer() 
	{
		//create the composer here
		mComposer = new SortComposer(mParentTab.featFile, mParentTab.edlFile);
       
		//set its settings
		((SortComposer)mComposer).setReverseSort(mHighToLowBtn.isSelected());
		((SortComposer)mComposer).setNormalizeFeatures(mNormalizeChk.isSelected());
	
		return 0;
	}
	
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        mDirectionGrp = new javax.swing.ButtonGroup();
        mNormalizeChk = new javax.swing.JCheckBox();
        mLowToHighBtn = new javax.swing.JRadioButton();
        mHighToLowBtn = new javax.swing.JRadioButton();

        mNormalizeChk.setSelected(true);
        mNormalizeChk.setText("Normalize features");
        mNormalizeChk.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        mNormalizeChk.setMargin(new java.awt.Insets(0, 0, 0, 0));

        mDirectionGrp.add(mLowToHighBtn);
        mLowToHighBtn.setText("Low to High");
        mLowToHighBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        mLowToHighBtn.setMargin(new java.awt.Insets(0, 0, 0, 0));

        mDirectionGrp.add(mHighToLowBtn);
        mHighToLowBtn.setSelected(true);
        mHighToLowBtn.setText("High to Low");
        mHighToLowBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        mHighToLowBtn.setMargin(new java.awt.Insets(0, 0, 0, 0));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(mLowToHighBtn)
                    .add(mHighToLowBtn))
                .add(16, 16, 16)
                .add(mNormalizeChk)
                .addContainerGap(101, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(mLowToHighBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(mHighToLowBtn))
                    .add(layout.createSequentialGroup()
                        .add(21, 21, 21)
                        .add(mNormalizeChk)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup mDirectionGrp;
    private javax.swing.JRadioButton mHighToLowBtn;
    private javax.swing.JRadioButton mLowToHighBtn;
    private javax.swing.JCheckBox mNormalizeChk;
    // End of variables declaration//GEN-END:variables
    
}
